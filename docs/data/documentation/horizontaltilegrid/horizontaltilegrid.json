{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HorizontalTileGrid"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"fullCustom(width: CGFloat) block"}]},{"type":"text","text":":"},{"type":"text","text":" "},{"type":"text","text":"This subview will have a custom width. it will fill the HorizontalTileGrid and a width equal to the provided value."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"half block"}]},{"type":"text","text":":"},{"type":"text","text":" "},{"type":"text","text":"If a subview is of type HalfSquare, Layout divides the available height in half and places the item on top or bottom space based on the order of appearance of the item in list. Layout would always start from top half, places the subview on the top half and goes to the next view, if the next item is a another half again, the layout places the new item in the bottom half, but if the next item is not of half display type, the bottom half would be empty"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"full block"}]},{"type":"text","text":":"},{"type":"text","text":" "},{"type":"text","text":"This display type is a standard square and provides a space of Width=Height=HorizontalTileGrid height."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/horizontaltilegrid\/horizontaltilegrid"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/HorizontalTileGrid\/7SwiftUI10AnimatableP","doc:\/\/HorizontalTileGrid\/7SwiftUI6LayoutP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/HorizontalTileGrid","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"HorizontalTileGrid layouts it’s subviews horizontally based on the subview display type. if no height is provided to HorizontalTileGrid, the height of the list would be equal to the biggest subview and the with of this layout would be equal to the sum of all display type widths."},{"type":"text","text":" "},{"type":"text","text":"There are three "},{"type":"reference","isActive":true,"identifier":"doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/HorizontalTileGrid\/BlockType"},{"type":"text","text":":"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HorizontalTileGrid"}],"title":"HorizontalTileGrid","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:18HorizontalTileGridAAV","modules":[{"name":"HorizontalTileGrid"}],"navigatorTitle":[{"kind":"identifier","text":"HorizontalTileGrid"}]},"hierarchy":{"paths":[["doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/HorizontalTileGrid\/init(blocks:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/HorizontalTileGrid\/makeCache(subviews:)","doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/HorizontalTileGrid\/placeSubviews(in:proposal:subviews:cache:)","doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/HorizontalTileGrid\/sizeThatFits(proposal:subviews:cache:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/HorizontalTileGrid\/Cache"]},{"title":"Enumerations","identifiers":["doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/HorizontalTileGrid\/BlockType"]},{"title":"Default Implementations","identifiers":["doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/HorizontalTileGrid\/Animatable-Implementations","doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/HorizontalTileGrid\/Layout-Implementations"],"generated":true}],"references":{"doc://HorizontalTileGrid/documentation/HorizontalTileGrid/FullBlockTile":{"role":"symbol","title":"FullBlockTile","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FullBlockTile"}],"abstract":[],"identifier":"doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/FullBlockTile","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FullBlockTile"}],"url":"\/documentation\/horizontaltilegrid\/fullblocktile"},"doc://HorizontalTileGrid/7SwiftUI10AnimatableP":{"type":"unresolvable","title":"SwiftUI.Animatable","identifier":"doc:\/\/HorizontalTileGrid\/7SwiftUI10AnimatableP"},"doc://HorizontalTileGrid/documentation/HorizontalTileGrid/HorizontalTileGrid/init(blocks:)":{"role":"symbol","title":"init(blocks:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"blocks"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"BlockType","preciseIdentifier":"s:18HorizontalTileGridAAV9BlockTypeO"},{"kind":"text","text":"]?)"}],"abstract":[{"type":"text","text":"Initialize the layout with an optional array of the display types. if the arrays is null, the layout expects it’s subviews to be one of these three views "},{"type":"reference","isActive":true,"identifier":"doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/HalfBlockTile"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/CustomWidthBlockTile"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/FullBlockTile"},{"type":"text","text":" or a custom view with "},{"type":"reference","isActive":true,"identifier":"doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/BlockTypeKey"},{"type":"text","text":" LayoutValueKey."}],"identifier":"doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/HorizontalTileGrid\/init(blocks:)","kind":"symbol","type":"topic","url":"\/documentation\/horizontaltilegrid\/horizontaltilegrid\/init(blocks:)"},"doc://HorizontalTileGrid/documentation/HorizontalTileGrid":{"role":"collection","title":"HorizontalTileGrid","abstract":[],"identifier":"doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid","kind":"symbol","type":"topic","url":"\/documentation\/horizontaltilegrid"},"doc://HorizontalTileGrid/documentation/HorizontalTileGrid/HorizontalTileGrid/BlockType":{"role":"symbol","title":"HorizontalTileGrid.BlockType","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"BlockType"}],"abstract":[],"identifier":"doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/HorizontalTileGrid\/BlockType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BlockType"}],"url":"\/documentation\/horizontaltilegrid\/horizontaltilegrid\/blocktype"},"doc://HorizontalTileGrid/documentation/HorizontalTileGrid/HorizontalTileGrid/makeCache(subviews:)":{"role":"symbol","title":"makeCache(subviews:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeCache"},{"kind":"text","text":"("},{"kind":"externalParam","text":"subviews"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Subviews","preciseIdentifier":"s:7SwiftUI6LayoutP8Subviewsa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Cache","preciseIdentifier":"s:18HorizontalTileGridAAV5Cachea"}],"abstract":[{"type":"text","text":"Generates the cache to improve the layout performance."}],"identifier":"doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/HorizontalTileGrid\/makeCache(subviews:)","kind":"symbol","type":"topic","url":"\/documentation\/horizontaltilegrid\/horizontaltilegrid\/makecache(subviews:)"},"doc://HorizontalTileGrid/documentation/HorizontalTileGrid/HorizontalTileGrid/Animatable-Implementations":{"role":"collectionGroup","title":"Animatable Implementations","abstract":[],"identifier":"doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/HorizontalTileGrid\/Animatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/horizontaltilegrid\/horizontaltilegrid\/animatable-implementations"},"doc://HorizontalTileGrid/documentation/HorizontalTileGrid/HorizontalTileGrid/Cache":{"role":"symbol","title":"HorizontalTileGrid.Cache","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cache"}],"abstract":[],"identifier":"doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/HorizontalTileGrid\/Cache","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Cache"}],"url":"\/documentation\/horizontaltilegrid\/horizontaltilegrid\/cache"},"doc://HorizontalTileGrid/documentation/HorizontalTileGrid/CustomWidthBlockTile":{"role":"symbol","title":"CustomWidthBlockTile","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CustomWidthBlockTile"}],"abstract":[],"identifier":"doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/CustomWidthBlockTile","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CustomWidthBlockTile"}],"url":"\/documentation\/horizontaltilegrid\/customwidthblocktile"},"doc://HorizontalTileGrid/documentation/HorizontalTileGrid/HorizontalTileGrid/sizeThatFits(proposal:subviews:cache:)":{"role":"symbol","title":"sizeThatFits(proposal:subviews:cache:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sizeThatFits"},{"kind":"text","text":"("},{"kind":"externalParam","text":"proposal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ProposedViewSize","preciseIdentifier":"s:7SwiftUI16ProposedViewSizeV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"subviews"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Subviews","preciseIdentifier":"s:7SwiftUI6LayoutP8Subviewsa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"cache"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Cache","preciseIdentifier":"s:18HorizontalTileGridAAV5Cachea"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CGSize","preciseIdentifier":"c:@S@CGSize"}],"abstract":[{"type":"text","text":"Calculates the size of the layout. the height of the layout would be equal to the height of a standard square which will be calculated here "},{"type":"strong","inlineContent":[{"type":"text","text":"func standardSquareSize(from minimumSquareSize: CGSize) -> CGSize"}]},{"type":"text","text":" and the minimum required with for showing the items would be sum of all display types"}],"identifier":"doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/HorizontalTileGrid\/sizeThatFits(proposal:subviews:cache:)","kind":"symbol","type":"topic","url":"\/documentation\/horizontaltilegrid\/horizontaltilegrid\/sizethatfits(proposal:subviews:cache:)"},"doc://HorizontalTileGrid/documentation/HorizontalTileGrid/BlockTypeKey":{"role":"symbol","title":"BlockTypeKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BlockTypeKey"}],"abstract":[{"type":"text","text":"A display type key that acts as an identifier for the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid"},{"type":"text","text":" subviews. "},{"type":"reference","isActive":true,"identifier":"doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid"},{"type":"text","text":" will look for this key on the the subviews only when it has been initiated without a "},{"type":"codeVoice","code":"BlockType"},{"type":"text","text":" list."}],"identifier":"doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/BlockTypeKey","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BlockTypeKey"}],"url":"\/documentation\/horizontaltilegrid\/blocktypekey"},"doc://HorizontalTileGrid/documentation/HorizontalTileGrid/HalfBlockTile":{"role":"symbol","title":"HalfBlockTile","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HalfBlockTile"}],"abstract":[],"identifier":"doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/HalfBlockTile","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HalfBlockTile"}],"url":"\/documentation\/horizontaltilegrid\/halfblocktile"},"doc://HorizontalTileGrid/documentation/HorizontalTileGrid/HorizontalTileGrid":{"role":"symbol","title":"HorizontalTileGrid","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HorizontalTileGrid"}],"abstract":[{"type":"text","text":"HorizontalTileGrid layouts it’s subviews horizontally based on the subview display type. if no height is provided to HorizontalTileGrid, the height of the list would be equal to the biggest subview and the with of this layout would be equal to the sum of all display type widths."},{"type":"text","text":" "},{"type":"text","text":"There are three "},{"type":"reference","isActive":true,"identifier":"doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/HorizontalTileGrid\/BlockType"},{"type":"text","text":":"}],"identifier":"doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/HorizontalTileGrid","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HorizontalTileGrid"}],"url":"\/documentation\/horizontaltilegrid\/horizontaltilegrid"},"doc://HorizontalTileGrid/documentation/HorizontalTileGrid/HorizontalTileGrid/placeSubviews(in:proposal:subviews:cache:)":{"role":"symbol","title":"placeSubviews(in:proposal:subviews:cache:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"placeSubviews"},{"kind":"text","text":"("},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CGRect","preciseIdentifier":"c:@S@CGRect"},{"kind":"text","text":", "},{"kind":"externalParam","text":"proposal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ProposedViewSize","preciseIdentifier":"s:7SwiftUI16ProposedViewSizeV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"subviews"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Subviews","preciseIdentifier":"s:7SwiftUI6LayoutP8Subviewsa"},{"kind":"text","text":", "},{"kind":"externalParam","text":"cache"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Cache","preciseIdentifier":"s:18HorizontalTileGridAAV5Cachea"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Calculates and manages the position of each subview inside the layout view"}],"identifier":"doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/HorizontalTileGrid\/placeSubviews(in:proposal:subviews:cache:)","kind":"symbol","type":"topic","url":"\/documentation\/horizontaltilegrid\/horizontaltilegrid\/placesubviews(in:proposal:subviews:cache:)"},"doc://HorizontalTileGrid/documentation/HorizontalTileGrid/HorizontalTileGrid/Layout-Implementations":{"role":"collectionGroup","title":"Layout Implementations","abstract":[],"identifier":"doc:\/\/HorizontalTileGrid\/documentation\/HorizontalTileGrid\/HorizontalTileGrid\/Layout-Implementations","kind":"article","type":"topic","url":"\/documentation\/horizontaltilegrid\/horizontaltilegrid\/layout-implementations"},"doc://HorizontalTileGrid/7SwiftUI6LayoutP":{"type":"unresolvable","title":"SwiftUI.Layout","identifier":"doc:\/\/HorizontalTileGrid\/7SwiftUI6LayoutP"}}}